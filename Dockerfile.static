ARG VERSION
ARG ARCHES_PROJECT=afs
ARG ARCHES_BASE=arches_coral_base
ARG WEB_ROOT=/web_root
FROM $ARCHES_BASE
FROM $ARCHES_BASE as arches_static_cache

USER 0

ARG DJANGO_DUMMY_SECRET_KEY
ARG STATIC_URL
ARG ARCHES_PROJECT
ARG ARCHES_NAMESPACE_FOR_DATA_EXPORT

ENV DJANGO_DEBUG=False \
    DJANGO_MODE=STATIC \
    STATIC_URL=${STATIC_URL} \
    STATIC_ROOT=/static_root \
    ARCHES_NAMESPACE_FOR_DATA_EXPORT=${ARCHES_NAMESPACE_FOR_DATA_EXPORT} \
    ARCHES_PROJECT=${ARCHES_PROJECT} \
    PROJECT_ROOT=${WEB_ROOT}/${ARCHES_PROJECT}/${ARCHES_PROJECT} \
    DJANGO_SECRET_KEY=${DJANGO_DUMMY_SECRET_KEY} \
    COMPRESS_OFFLINE=True \
    PGUSERNAME=postgres \
    PGPASSWORD=postgres \
    PGDBNAME=arches \
    PGHOST=localhost \
    PGPORT=5432 \
    COUCHDB_HOST=couchdb \
    COUCHDB_PORT=5984 \
    COUCHDB_USER=admin \
    COUCHDB_PASS=password \
    ESHOST=localhost \
    ESPORT=9200 \
    CELERY_BROKER_URL=amqp://rabbitmq \
    DOMAIN_NAMES=localhost \
    PYTHONUNBUFFERED=0 \
    TZ=PST \
    DJANGO_SETTINGS_MODULE=${ARCHES_PROJECT}.settings
RUN useradd arches && mkdir -p /static_root && chown -R arches /static_root
WORKDIR ${WEB_ROOT}/${ARCHES_PROJECT}

FROM flaxandteal/arches_$ARCHES_PROJECT:$VERSION as arches_dynamic
FROM arches_static_cache as arches
ARG WEB_ROOT=/web_root
ARG ARCHES_PROJECT
COPY --from=arches_dynamic ${WEB_ROOT}/entrypoint.sh ${WEB_ROOT}/entrypoint.sh
COPY --from=arches_dynamic ${WEB_ROOT}/${ARCHES_PROJECT}/ /web_root/${ARCHES_PROJECT}/
COPY --from=arches_dynamic ${WEB_ROOT}/arches/arches/settings_docker.py ${WEB_ROOT}/arches/arches

RUN ${WEB_ROOT}/entrypoint.sh init_yarn_components

# FIXME: To be replaced once per-project settings working
RUN (echo "\nSTATIC_ROOT='${STATIC_ROOT}'" >> ${WEB_ROOT}/arches/arches/settings_docker.py) && echo $STATIC_ROOT
RUN (echo "\nARCHES_NAMESPACE_FOR_DATA_EXPORT='${ARCHES_NAMESPACE_FOR_DATA_EXPORT}'" >> ${WEB_ROOT}/arches/arches/settings_docker.py) && echo $STATIC_ROOT

RUN (cd $WEB_ROOT/$ARCHES_PROJECT/$ARCHES_PROJECT && NODE_OPTIONS=--max_old_space_size=8192 NODE_PATH=./media/node_modules yarn add -D babel-loader html-loader clean-webpack-plugin webpack-cli mini-css-extract-plugin stylelint-webpack-plugin eslint-webpack-plugin)
RUN (cd $WEB_ROOT/$ARCHES_PROJECT/$ARCHES_PROJECT && NODE_OPTIONS=--max_old_space_size=8192 NODE_PATH=./media/node_modules yarn install -D)
RUN /bin/bash -c ". ../ENV/bin/activate;\
../entrypoint.sh setup_arches;\
python manage.py createcachetable;\
python manage.py packages -o load_package -s coral/pkg/ -y;\
python manage.py es index_database\
";
RUN echo $WEB_ROOT "|" $ARCHES_PROJECT && ${WEB_ROOT}/entrypoint.sh run_yarn_build_production

FROM nginxinc/nginx-unprivileged:1.21.5-alpine

COPY --from=arches ${WEB_ROOT}/${ARCHES_PROJECT}/${ARCHES_PROJECT}/media/build/* /usr/share/nginx/html

# Must be numeric to verify not root
USER 33
