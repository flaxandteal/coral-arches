describe('Going through the Flag For Enforcement Workflow', function () {

    beforeEach(() => {
        cy.login()
        cy.visit('http://localhost:8000/plugins/init-workflow')
    });

    it('Go through the workflow and populate all fields', function () {
        cy.contains('Workflows');
        cy.contains('Flag for Enforcement').click();

        // Initial step tab
        // Makes sure the autogenerated id is not undefined
        cy.contains('Enforcement ID').siblings('.col-xs-12').children('input').should('not.have.value');
        cy.contains('Enforcement ID').siblings('.col-xs-12').children('input').should('not.have.value', '');
        cy.contains('Save and Continue').click();

        // Enforcement Details Tab
        cy.wait(2000);
        cy.get('[aria-label="Case Reference"]').should('be.visible').type('Case Ref');
        cy.type_ckeditor('editor2', 'test reason for enforcement');
        cy.contains('Flagged by').siblings('.row').click();
        // Selects the first value in the dropdown. Would be better if we have a pervious test that initates a test person and we can find them by name
        // TODO test with organisation as well
        cy.get('.select2-results__options li').first().click();
        cy.get('[aria-label="Flagged Date"]').should('be.visible').click();
        cy.get('[aria-label="Flagged Date"]').siblings('.bootstrap-datetimepicker-widget').contains('17').click();
        cy.contains('Select resources').siblings('.row').click();
        // Selects the first value in the dropdown. Would be better if we have a pervious test that initates a Heritage Asset and uses that by name
        cy.get('.select2-results__options li').first().click();
        cy.contains('Save and Continue').click();

        // Enforcement Summary tab
        cy.contains('ResourceID:').siblings().should('not.have.text');
        cy.contains('ResourceID:').siblings().should('not.have.text', '');
        cy.contains('Case Reference Number:').siblings().should('have.text', 'Case Ref');
        cy.contains('Description:').siblings().should('have.text', 'test reason for enforcement');
        // Only checks if the date we selected is present as the year and month could change
        cy.contains('Flagged Date Value:').siblings().should('contain', '17');
        // TODO actually create the person and use the name in the check here
        cy.contains('Actor:').siblings().should('have.text', 'test');
        cy.wait(2000);
        cy.contains('Save and Complete Workflow').click();
    });

    it('Go through the workflow only with Enforcement ID', function () {
        cy.contains('Workflows');
        cy.contains('Flag for Enforcement').click();

        // Initial step tab
        // Makes sure the autogenerated id is not undefined
        cy.contains('Enforcement ID').siblings('.col-xs-12').children('input').should('not.have.value');
        cy.contains('Enforcement ID').siblings('.col-xs-12').children('input').should('not.have.value', '');
        cy.contains('Save and Continue').click();

        // Enforcement Details Tab
        cy.wait(2000);
        cy.contains('Next Step').click();

        // Enforcement Summary tab
        cy.contains('ResourceID:').siblings().should('not.have.text');
        cy.contains('Save and Complete Workflow').click();
    });

    it('Go through the workflow and populate only Case Reference', function () {
        cy.contains('Workflows');
        cy.contains('Flag for Enforcement').click();

        // Initial step tab
        // Makes sure the autogenerated id is not undefined
        cy.contains('Enforcement ID').siblings('.col-xs-12').children('input').should('not.have.value');
        cy.contains('Enforcement ID').siblings('.col-xs-12').children('input').should('not.have.value', '');
        cy.contains('Save and Continue').click();

        // Enforcement Details Tab
        cy.wait(2000);
        cy.get('[aria-label="Case Reference"]').should('be.visible').type('Case Ref');
        cy.contains('Save and Continue').click();

        // Enforcement Summary tab
        cy.contains('ResourceID:').siblings().should('not.have.text');
        cy.contains('ResourceID:').siblings().should('not.have.text', '');
        cy.contains('Case Reference Number:').siblings().should('have.text', 'Case Ref');
        cy.contains('Save and Complete Workflow').click();
    });
})
