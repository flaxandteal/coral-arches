# This is based on the AGPL licensed docker-compose.yaml
# file from archesproject/arches
version: '2'
services:

    arches_static_py:
      container_name: arches_static_py
      image: arches_${ARCHES_PROJECT}_static_py:latest
      restart: unless-stopped
      entrypoint: ["../entrypoint.sh"]
      build:
        context: .
        dockerfile: ./Dockerfile.static-py
        args:
          - ARCHES_PROJECT=$ARCHES_PROJECT
          - VERSION=latest
      command: run_arches
      volumes:
        - arches-static-log:/arches/arches/logs
        - ./$ARCHES_PROJECT:/web_root/$ARCHES_PROJECT
        - ./entrypoint.sh:/web_root/entrypoint.sh
        - ./settings_docker.py:/web_root/arches/arches/settings_docker.py
      environment:
        - ARCHES_PROJECT=$ARCHES_PROJECT
        - INSTALL_DEFAULT_GRAPHS=False
        - INSTALL_DEFAULT_CONCEPTS=False
        - COMPRESS_OFFLINE=True
        - PGUSERNAME=postgres
        - PGPASSWORD=postgres
        - PGDBNAME=arches
        - PGHOST=db
        - PGPORT=5432
        - COUCHDB_HOST=couchdb
        - COUCHDB_PORT=5984
        - COUCHDB_USER=admin
        - COUCHDB_PASS=password
        - ESHOST=elasticsearch
        - ESPORT=9200
        - CELERY_BROKER_URL=amqp://rabbitmq
        - DJANGO_MODE=DEV
        - DJANGO_DEBUG=True
        # - DJANGO_REMOTE_DEBUG=False
        - DOMAIN_NAMES=localhost
        - PYTHONUNBUFFERED=0
        - STATIC_URL=$STATIC_URL
        - TZ=PST
      ports:
        - '8000:8000'
      depends_on:
        - db
        - elasticsearch
        - couchdb
        - arches_static

    arches_worker:
      container_name: arches_worker
      image: arches_${ARCHES_PROJECT}_static_py:latest
      restart: unless-stopped
      entrypoint: ["../entrypoint.sh"]
      build:
        context: .
        dockerfile: ./Dockerfile.static-py
        args:
          - ARCHES_PROJECT=$ARCHES_PROJECT
          - VERSION=latest
      command: run_celery
      volumes:
        - arches-static-log:/arches/arches/logs
        - ./$ARCHES_PROJECT:/web_root/$ARCHES_PROJECT
        - ./entrypoint.sh:/web_root/entrypoint.sh
        - ./settings_docker.py:/web_root/arches/arches/settings_docker.py
      environment:
        - ARCHES_PROJECT=$ARCHES_PROJECT
        - INSTALL_DEFAULT_GRAPHS=False
        - INSTALL_DEFAULT_CONCEPTS=False
        - PGUSERNAME=postgres
        - PGPASSWORD=postgres
        - PGDBNAME=arches
        - PGHOST=db
        - PGPORT=5432
        - COUCHDB_HOST=couchdb
        - COUCHDB_PORT=5984
        - COUCHDB_USER=admin
        - COUCHDB_PASS=password
        - ESHOST=elasticsearch
        - ESPORT=9200
        - DJANGO_MODE=DEV
        - DJANGO_DEBUG=True
        # - DJANGO_REMOTE_DEBUG=False
        - DOMAIN_NAMES=localhost
        - PYTHONUNBUFFERED=0
        - CELERY_BROKER_URL=amqp://rabbitmq
        - TZ=PST
      depends_on:
        - db
        - elasticsearch
        - couchdb
        - rabbitmq
        - arches_static

    arches_static:
      container_name: arches_static
      image: arches_${ARCHES_PROJECT}_static:latest
      restart: unless-stopped
      build:
        context: .
        dockerfile: ./Dockerfile.static
        args:
          - ARCHES_PROJECT=$ARCHES_PROJECT
          - STATIC_URL=$STATIC_URL
          - DJANGO_DUMMY_SECRET_KEY='c7ky-mc6vdnv+avp0r@(a)8y^51ex=25nogq@+q5*mxwdi'
          - VERSION=latest
      ports:
        - '8080:8080'
      environment:
        - NGINX_PROXY_MODE=local
        - NGINX_PROTOCOL=http
        - LOCAL_PROXY_HOST=arches
        - LOCAL_PROXY_PORT=8000
        - DOMAIN_NAMES=localhost
        - PUBLIC_MODE=False
        - TZ=PST

    db:
      container_name: db
      image: kartoza/postgis:12.0
      volumes:
          - postgres-static-data:/var/lib/postgresql/data
          - postgres-static-log:/var/log/postgresql
          - ${ARCHES_ROOT:-./$ARCHES_PROJECT/$ARCHES_PROJECT/media/packages/arches}/arches/install/init-unix.sql:/docker-entrypoint-initdb.d/init.sql # to set up the DB template
      ports:
        - '5432:5432'
      environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASS=postgres
        - POSTGRES_DB=postgres
        - POSTGRES_MULTIPLE_EXTENSIONS=postgis,postgis_topology
        - TZ=PST

    couchdb:
      container_name: couchdb
      image: couchdb:2.1.1
      ports:
        - "5984:5984"
      environment:
        COUCHDB_USER: admin
        COUCHDB_PASSWORD: password
      volumes:
        - couchdb-static-data:/usr/local/var/lib/couchdb
        - couchdb-static-log:/usr/local/var/log/couchdb

    elasticsearch:
      container_name: elasticsearch
      image: elasticsearch:7.5.1
      volumes:
        - elasticsearch-static-data:/usr/share/elasticsearch/data
      ports:
        - "9200:9200"
        - "9300:9300"
      environment:
        - TZ=PST
        - discovery.type=single-node
        - discovery.seed_hosts=
        - "ES_JAVA_OPTS=-Xms400m -Xmx400m"

    rabbitmq:
      container_name: rabbitmq
      image: rabbitmq

volumes:
    arches-static-log:
    couchdb-static-data:
    couchdb-static-log:
    postgres-static-data:
    postgres-static-log:
    elasticsearch-static-data:
